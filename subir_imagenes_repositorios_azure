<!DOCTYPE html>
<html>

<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- The above 3 meta tags must come first in the head; any other head content must come after these tags -->
    <meta name="description" content="" />
    <meta name="author" content="" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    
    <link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" integrity="sha512-mSYUmp1HYZDFaVKK//63EcZq4iFWFjxSL+Z3T/aCt4IO9Cejm03q3NKKYN6pFQzY0SBOr8h+eCIAZHPXcpZaNw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.1/css/select.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" />
	
	<link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.5.6/css/buttons.dataTables.min.css">
	
	<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
	<!-- 
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous">
        </script>
    -->
    
    <script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
    
    <style>
        body {
            font-size: 8pt;
        }
        
        table.dataTable tr.dtrg-group.dtrg-level-0 td {
		    font-weight: bold;
		}
		table.dataTable tr.dtrg-group td {
		    background-color: #e0e0e0;
		}
		table.dataTable tr.dtrg-group.dtrg-level-1 td:first-child{
		    padding-left: 2em;
		}
		table.dataTable tr.dtrg-group.dtrg-level-1 td{
		    background-color: #f0f0f0;
		    padding-top: 0.25em;
		    padding-bottom: 0.25em;
		}
		table.dataTable tr.dtrg-group.dtrg-level-2 td:first-child {
		    padding-left: 3em;
		}
		table.dataTable tr.dtrg-group.dtrg-level-2 td {
		    background-color: #fff0f0;
		}
		table.dataTable.compact tbody tr td.order_id {
		    padding-left: 4em;
		}
		
		.lds-hourglass {
			width: 150px;
			height: 150px;
			left:45%;
			right:0;
			top:40%;
			bottom:0;
			position:absolute;
			background: url('https://www.power-street.com/wp-content/uploads/2020/04/CIRCULO-LOGO.png');
			background-size: 100% 100%;
			//animation: spin 1s linear infinite;
			animation: lds-hourglass 1.2s infinite;
			align-self: auto; /* Y (relacionado con align-items) */
			text-align: center;
			z-index:1;
		}
		
		@keyframes lds-hourglass {
			0% {
				transform: rotate(0);
				animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
			}
			50% {
				transform: rotate(900deg);
				animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
			}
			100% {
				transform: rotate(1800deg);
			}
		}
		
		.modal-dialog {
			max-width: 70% !important;
			height: 100%;
			padding: 0;
			margin: 10;
		}

		/* Estilo para los divs */
        .span2 {
            float: left; /* Flotar a la izquierda para mostrarlos en línea */
            width: 200px; /* Ancho fijo para cada div */
            margin-right: 20px; /* Margen entre los divs */
        }

        /* Aplicar un margen superior a cada cuarto div */
        .span2:nth-child(4n) {
            margin-top: 20px; /* Margen superior para separar de cuatro en cuatro */
        }

        /* Limpiar el flotador después de cada fila de cuatro divs */
        .container::after {
            content: "";
            display: table;
            clear: both;
        }
        
        /* Ajustar el ancho del contenedor */
        #container_image {
            width: 1000px; /* Ancho del contenedor */
            margin: 0 auto; /* Centrar el contenedor horizontalmente */
        }
        
    </style>

</head>

<body oncontextmenu="return false;">

    <div id="loader" class="lds-hourglass"></div>
    
    <div class="container-fluid">
        <div class="masthead">
            <div class="row-fluid">
                <div class="span12">
                    <table align="center" style="width: 100%; text-align: center; font-size: 12pt; color: #336699;">
                        <tr>
                            <td align="center" style="padding: 2px;">
                                <div id="cabDistrib"></div>
                            </td>
                        </tr>
                        <tr>
                            <td align="center" style="padding: 2px;">
                                <div id="cabAgencia"></div>
                            </td>
                        </tr>
                        <tr>
                            <td align="center" style="padding: 2px; font-size: 10pt">
                                <div id="cabFecha"></div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        
        <br>
        
        <div class="row">
        	<div class="col-md-1">
        		<label><b>* Desde Fecha</b></label>
        		<div data-date-format="dd/mm/yyyy" data-date="" class="input-append date">
                    <span id="sldesde" class="add-on">
                        <input type="text" value="" id="select_desde" class="form-control red-input"
                            readonly="true" style="font-size: 8pt; text-align: center;">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
        	</div>
        	<div class="col-md-1">
        		<label><b>* Hasta Fecha</b></label>
        		<div data-date-format="dd/mm/yyyy" data-date="" class="input-append date">
                    <span id="slhasta" class="add-on">
                        <input type="text" value="" id="select_hasta" class="form-control red-input"
                            readonly="true" style="font-size: 8pt; text-align: center;">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
        	</div>
            <div class="col-md-2">
                <label><b>Distribuidor</b></label>
                <select id="select_distribuidor" style="font-size: 9pt" class="form-control form-control-sm"></select>
            </div>
            <div class="col-md-3">
                <label><b>Agencia</b></label>
                <select id="select_agencia" style="font-size: 9pt" class="form-control form-control-sm"></select>
            </div>
            <div class="col-md-3">
                <label><b>Ruta</b></label>
                <select id="select_ruta" style="font-size: 9pt" class="form-control form-control-sm"></select>
            </div> 
            <div class="col-md-1">
                <label><b>&nbsp;</b></label>
                <br>
                <button id="btn_buscar" type="button" style="font-size: 9pt" class="btn btn-info pull-center">Buscar</button>
            </div>
            <div class="col-md-2">
			</div>	
			
        </div>
		
		<br>
		 
		<div class="col-md-12" id="consulta_principal">
	        <center>
	        	<table Id="MiTabla_1" class="table table-striped table-bordered dt-responsive nowrap" style="font-size: 8pt" border="0">
	                <thead class="thead-light">
	                    <tr Id="Titulos_1"></tr>
	                </thead>
	                <tbody id="datos_1"></tbody>
	            </table>
			</center>
        </div>
    
    </div>
	
	<div class="modal fade" id="Modal_Update"  role="dialog" aria-labelledby="#exampleModalLabel" style="width:100%">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
			    	<h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
			    	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
			      		<span aria-hidden="true">&times;</span>
			    	</button>
			  	</div>
				<div class="modal-body">
					<!-- Formulario para subir archivos -->
					<form id="uploadForm" enctype="multipart/form-data">
						<div class="mb-3">
							<label for="fileInput" class="form-label">Selecciona un archivo:</label>
							<input type="file" class="form-control" id="fileInput" name="file" accept="image/*">
						</div>
						<button type="button" class="btn btn-primary" onclick="uploadImage()">Subir Archivo</button>
					</form>
		
					<div id="result" class="mt-3"></div>
					
					<div id="container_image" class="container">
					    <!-- Aquí se agregarán dinámicamente los elementos span2 -->
					</div>
					<!--
					<div class="card mt-3" style="width: 18rem;" id="imageCard">
						<div id="container_image" class="container">
						     Aquí se agregarán dinámicamente los elementos span2 
						</div>
					</div>
					-->
        		</div>
				<div class="modal-footer">
			    	<button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
				</div>
			</div>
		</div>
	</div>

	
    <script src="http://cdn.pst.com.uy/jquery/1.10.2/jquery.min.js"></script>
    <script src="http://cdn.pst.com.uy/bootstrap/2.3.2/js/bootstrap.js"></script>
    
    <!-- script que sirver para el datepicker --> 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js" integrity="sha512-T/tUfKSV1bihCnd+MxKD0Hm1uBBroVYBOYSk1knyvQ9VyZJpc/ALb4P0r6ubwVPSGB2GvjeoMAJJImBG12TiaQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.es.min.js" integrity="sha512-5pjEAV8mgR98bRTcqwZ3An0MYSOleV04mwwYj2yw+7PBhFVf/0KcE+NEox0XrFiU5+x5t5qidmo5MgBkDD9hEw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/select/1.3.1/js/dataTables.select.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/rowgroup/1.2.0/js/dataTables.rowGroup.min.js"></script>
	
	<script type="text/javascript" src="https://cdn.datatables.net/responsive/2.3.0/js/dataTables.responsive.min.js"></script>
	<link href="https://cdn.datatables.net/responsive/2.3.0/css/responsive.dataTables.min.css" rel="stylesheet" />
	
	<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script> 
	<script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
	<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.bootstrap4.min.js"></script>
	<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
	
	<script src="https://gyrocode.github.io/jquery-datatables-checkboxes/1.2.12/js/dataTables.checkboxes.min.js"></script>
	
	<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
	
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
	
    <script>
		
	//------------------------------------------------------------------------------------------------
	
	xmlToJson = function (xml) {
		var obj = {};
		if (xml.nodeType == 1) {
			if (xml.attributes.length > 0) {
				obj["@attributes"] = {};
				for (var j = 0; j < xml.attributes.length; j++) {
					var attribute = xml.attributes.item(j);
					obj["@attributes"][attribute.nodeName] = attribute.nodeValue;
				}
			}
		} else if (xml.nodeType == 3) {
			obj = xml.nodeValue;
		}
		if (xml.hasChildNodes()) {
			for (var i = 0; i < xml.childNodes.length; i++) {
				var item = xml.childNodes.item(i);
				var nodeName = item.nodeName;
				if (typeof (obj[nodeName]) == "undefined") {
					obj[nodeName] = xmlToJson(item);
				} else {
					if (typeof (obj[nodeName].push) == "undefined") {
						var old = obj[nodeName];
						obj[nodeName] = [];
						obj[nodeName].push(old);
					}
					obj[nodeName].push(xmlToJson(item));
				}
			}
		}
		return obj;
	}

	function consola(argumentos, valor) {

		function esJson(obj) {
			try {
				JSON.stringify(obj);
				return true;
			} catch (err) {
				return false;
			}
		}

		if (valor == 1) {
			var consola_id = document.getElementById('consola_id');
			if (consola_id == undefined) {
				var consola_id = document.createElement("textarea");
				consola_id.setAttribute("id", "consola_id");
				document.body.appendChild(consola_id);
				consola_id.setAttribute("rows", "10");
				consola_id.style.background = "#314059";
				consola_id.style.color = "#ffffff";
				consola_id.style.opacity = ".9";
				consola_id.style.zIndex = "999";
				consola_id.style.width = "1200px";
			}
			for (var i = 0; i < arguments.length; i++) {
				var argumento = arguments[i];
				if (esJson(argumento)) {
					argumento = JSON.stringify(argumento);
				}
				consola_id.value = consola_id.value + argumento + "\n";
			}
		} else {
			var consola_id = document.getElementById('consola_id');
			if (consola_id == undefined) {
				var consola_id = document.createElement("textarea");
				consola_id.setAttribute("id", "consola_id");
				document.body.appendChild(consola_id);
				consola_id.setAttribute("rows", "10");
				consola_id.style.background = "#314059";
				consola_id.style.color = "#ffffff";
				consola_id.style.opacity = ".9";
				consola_id.style.zIndex = "999";
				consola_id.style.width = "1200px";
			}
			for (var i = 0; i < arguments.length; i++) {
				var argumento = arguments[i];
				consola_id.value = consola_id.value + Hoy(1) + " " + argumento + "\n";
			}
		}
	}
        
	//------------------------------------------------------------------------------------------------
	
	var instanceManager = new ActiveXObject("PwstInstanceManager.InstanceManager");
	var PowerStreet = instanceManager.PowerStreet;
	var oApp = instanceManager.PwstUI;
	var raiz = unescape(location.href.substring(0, location.href.substring(0, location.href.length - 1).lastIndexOf("/") + 1)).split("file:///").join("");

	// Variables globales
	var txtSociedad = PowerStreet.Configuracion.Distribuidor;
	var txtCD = PowerStreet.Configuracion.Agencia;
	var sqlcombo, txtTipo, txtVendedor = "", txtPickinlist = 0, otropickng, lineas = 0, rcDocPendientes, lngIndice = 1;
	var datos_general = [];
	var datos_modal = [];
	
	$(document).ready(function () {
		
		encabezado();
		cargaDatos();
		cargar_datos_1();    
		
		$('.select2').select2({
			closeOnSelect: true
		});
		
		ocultarLoader();
	});
        
	//------------------------------------------------------------------------------------------------
	
	function cargaDatos() {
		
		sql = "";
		sql += "select (codigo)codigo, rtrim(descrip) descripcion from distrib where codigo = @Disitribuidor order by 1 ";
		CargaDeComboBox("#select_distribuidor", sql, 3);
		
		sql = "";
		sql += "select rtrim(codigo)codigo, rtrim(descrip)descripcion from agencias where distribuidor = @Disitribuidor and codigo = @Agencia";
		CargaDeComboBox("#select_agencia", sql, 3);

		sql = "";
		sql += "select 'ALL' codigo, 'TODOS' descripcion, 1 orden ";
		sql += " union select rtrim(codigo)codigo, rtrim(rtrim(nombre))descripcion, 2 orden from vendedor where distribuidor = @Disitribuidor and agencia = @Agencia order by orden";
		CargaDeComboBox("#select_ruta", sql, 3);
		
		$("#select_desde").val(Hoy());
		$("#select_hasta").val(Hoy());
		
		$("#select_desde").datepicker({
			language: "es",
			format: "dd/mm/yyyy",
			todayBtn: "linked",
			todayHighlight: true
		});
		
		$("#select_hasta").datepicker({
			language: "es",
			format: "dd/mm/yyyy",
			todayBtn: "linked",
			todayHighlight: true
		});
		
		cargaFiltros();
	}
        
	//------------------------------------------------------------------------------------------------
	
	function cargaFiltros(){
		mostrarLoader()
		
		var desde = $("#select_desde").val()
		var hasta = $("#select_hasta").val()
		
		ocultarLoader()
		
	}
	
	//------------------------------------------------------------------------------------------------
	
	$('#select_desde').change(function () {
		Ocultar_panel();
		cargaFiltros();
	});	
	
	//------------------------------------------------------------------------------------------------
	
	$('#select_hasta').change(function () {
		Ocultar_panel();
		cargaFiltros();
	});	
	
	//------------------------------------------------------------------------------------------------
	
	$("#select_distribuidor").change(function () {
		Ocultar_panel();
		cargaFiltros();
	});
	
	//------------------------------------------------------------------------------------------------
	
	$("#select_agencia").change(function () {
		Ocultar_panel();
		cargaFiltros();
	});
	//------------------------------------------------------------------------------------------------
	
	$("#select_ruta").change(function () {
		Ocultar_panel();
		cargaFiltros();
	});
	
	//------------------------------------------------------------------------------------------------

	$("#btn_buscar").click(function () {
		mostrarLoader();
		cargar_datos_1();
		ocultarLoader();
	});
	
	//------------------------------cargo los datos de la tabla consulta_general------------------------------------------------------------------
	

	function consulta_informacion_1() {
		var sql, unD, combos = "";
		var desde = $.trim($("#select_desde").val())
		var hasta = $.trim($("#select_hasta").val())
		var distribuidor = $.trim($("#select_distribuidor").val())
		var agencia = $.trim($("#select_agencia").val())
		var ruta = $.trim($("#select_ruta").val())
		
		datos_general = [];
		
		sql = "";
		sql = document.getElementById("consulta_general").innerHTML;
		sql = sql.replace(/objdesde/g, "'" + desde + "'")
		sql = sql.replace(/objhasta/g, "'" + hasta + "'")
		sql = sql.replace(/objsociedad/g, "'" + distribuidor + "'")
		sql = sql.replace(/objdistrib/g, "'" + agencia + "'")
		sql = sql.replace(/objruta/g, "'" + ruta + "'")
					
		unD = PowerStreet.OpenRecordset(sql);
		
		if(unD.recordCount != 0){
			while( !unD.EOF ) {
				var obj = {};
				obj = construyeJsonOpenrecorset(unD);
				datos_general.push(obj);
				unD.MoveNext();
			}
		}
		
		return datos_general
		
		oApp.managePwstErrors();
								
	}
	
	//------------------------------------------------------------------------------------------------
	
	function construyeJsonOpenrecorset(registro){
		var datos = {};
		var cantidad = 0;
		cantidad = registro.Fields.Count

		for (var a = 0; a < cantidad; a++) {
			if (registro.Fields(a).name.length < 3) {
				continue;
			}
			
			str_type = registro.Fields(a).name.substring(0, 2);
			campo = registro.Fields(a).name.substring(2).trim();
			
			switch (str_type) {
				case "s_":
					datos[campo] = registro.collect(a).toString().trim();
					break;
				case "n_":
					datos[campo] = formatNumber(parseFloat(registro.collect(a)));
					break;
				case "b_":
					datos[campo] = registro.collect(a) === 1 ? true : false;
					break;
				case "d_":
					datos[campo] = new Date(registro.collect(a));
					break;
				case "i_":
					datos[campo] = parseInt(registro.collect(a));
					break;
				default:
					campo = registro.Fields(a).name.trim();
					datos[campo] = registro.collect(a);
			}
			
		}

		return datos
	}
        
	//------------------------------------------------------------------------------------------------
	
	function cargar_datos_1() {
		createDatatable("#MiTabla_1")
		$("#consulta_principal").show();
		var datos_agregar = consulta_informacion_1();
		var td = [];
		var Campos_Usados = [ 'id_solicitud','fecha', 'documento', 'numero', 'numero_interno','cambio_estado'];
		
		var Traducciones = {
			 numero_interno: "Numero Interno"
			,cambio_estado: "Subir/Descargar<br>Imagen"
			, venta: "Tipo Venta"
		}
		
		$("#Titulos_1").empty();
		$("#datos_1").empty();
		
		$.each(Campos_Usados, function (index2, value) {
			if (Traducciones[value] != undefined)
				value = Traducciones[value];

			value = value.toUpperCase() //.replace(/_/g," ").
			td[index2] = $("<th/>", { html: value });
			td[index2].css("text-align", "center");
		});

		for (var i = 0; i < td.length; i++) {
			$("#Titulos_1").append($(td[i]));
		}

		$.each(datos_agregar, function (index, value) {
			var td = [];
			var tr = $("<tr/>");

			$.each(Campos_Usados, function (index2, NCampo) {
				if (NCampo == "vendedor" || NCampo == "numero_interno") {
					td[index2] = $("<td/>", { html: value[NCampo] });
					td[index2].css("text-align", "center");
				} else if (NCampo == "orden") {
					td[index2] = $("<td/>",{html:(index+1)});    
					} else if (NCampo == "cambio_estado") { 
					sql = "" 
					sql += "<a class='btn btn-info pull-center' href='#Modal_Update' data-toggle='modal' onclick = subir_imagen('" + index + "')>"
					sql += "Subir Imagen" 
					sql += "</a>"
					
					td[index2] = $("<td/>",{html:sql});
				} else {
					td[index2] = $("<td/>", {
						html: value[NCampo]
					});
				}
			});
			for (var i = 0; i < td.length; i++) {
				$(tr).append($(td[i]));
			}

			$("#datos_1").append($(tr));

		});
		
		cargaDatable("#MiTabla_1")
		
	}
	
	//------------------------------------------------------------------------------------------------
	
	function descargarImagenEnNuevaPagina(url) {
	    //window.open(url, '_blank');
	    var ieVersion = parseInt(navigator.appVersion.split("MSIE")[1]);
	    
		if (ieVersion === 7) {
			var wshShell = new ActiveXObject("WScript.Shell");
			wshShell.Run("chrome " + url);
		} else {
			window.location.href = link;
		}
	}
	
	//------------------------------------------------------------------------------------------------
	
	function borrarImagen(datos,imagen){
		PowerStreet.Execstring("delete from imagen_x_documento where empresa = " + datos.empresa + " and clavecorr = '" + datos.clavecorr + "' and serie = '" + datos.serie + "' and nrodoc = " + datos.nrodoc + " and url_doc = '" + datos.url_doc + "'")
		visualizarImagenes(datos)
	}
	
	//------------------------------------------------------------------------------------------------
	
	function visualizarImagenes(datos) {
	    var $container = $('#container_image');
		$container.empty(); // Limpiar el contenedor
	        
	    var datos_item = [];
	
	    sql = document.getElementById("consulta_items").innerHTML;
	    sql = sql.replace(/objempresa/g, datos.empresa)
	             .replace(/objclavecorr/g, datos.clavecorr)
	             .replace(/objserie/g, datos.serie)
	             .replace(/objnrodoc/g, datos.nrodoc);
	
	    unD = PowerStreet.OpenRecordset(sql);
	
	    if (unD.recordCount != 0) {
	        while (!unD.EOF) {
	            var obj = construyeJsonOpenrecorset(unD);
	            datos_item.push(obj);
	            unD.MoveNext();
	        }
	
	        $.each(datos_item, function(index, value) {
	            var imagen = value.url_doc;
	            
	            var $div = $('<div>').addClass('span2');
	            var $img = $('<img>').attr({
	                src: imagen,
	                alt: 'Imagen ' + (index + 1),
	                id: 'imagen_' + (index + 1),
	                width: '150px',
                	height: '150px'
	            });
	            
	            // Crear el botón de descarga
	            var $botonDescarga = $('<button>').text('Descargar').addClass('btn btn-success pull-center');
	            $botonDescarga.on('click', function() {
	                descargarImagenEnNuevaPagina(imagen);
	            });
	            
	            var $espacio = $('<span>').text(' ');
	            
	            // Crear el botón de borrar
	            var $botonBorrar = $('<button>').text('Borrar').addClass('btn btn-danger pull-center');
	            $botonBorrar.on('click', function() {
	            	borrarImagen(value);
	            });
	            
	            // Agregar la imagen y el botón al div
	            $div.append($img, $botonDescarga, $espacio, $botonBorrar);
	            $container.append($div);
	        });
	    }
	}
	
	//------------------------------------------------------------------------------------------------
	
	var credenciales = {
		blob: "heredia",
		connecString: "DefaultEndpointsProtocol=https;AccountName=pwstimages2;AccountKey=sMxOe4nN3FXk3w+Bb0bDWdycWTS1bemMfzeNJZNa6ayXXOs2fGY76p6ni5C8pQ0FGEUvRRANqqjIqXuDkWAN1A==;EndpointSuffix=core.windows.net",
		saskey: "?sv=2022-11-02&ss=bfqt&srt=sco&sp=rwlcx&se=2024-09-09T01:01:58Z&st=2023-08-08T17:01:58Z&spr=https&sig=OyQVXNwvtPtrfZPAbKbNC9682Pd%2Fvapgg8s9W9qBb%2B4%3D",
		repository: "pwstimages2",
		xmsversion: "2018-03-28"
	};
	
	//------------------------------------------------------------------------------------------------
	
    function uploadImage() {
        var fileInput = document.getElementById('fileInput');
        var file = fileInput.files[0];
         
        if (file) {
			var nombre = file.name;
        	var url = "https://" + credenciales.repository.trim() + ".blob.core.windows.net/" + credenciales.blob.trim() + "/" + nombre + credenciales.saskey.trim();
        	var ret_url = "https://" + credenciales.repository.trim() + ".blob.core.windows.net/" + credenciales.blob.trim() + "/" + nombre;
            var fileName = file.name;
            var dateTime = new Date().toUTCString();
            
            var xhr = new XMLHttpRequest();
            xhr.open("PUT", url, true);
            xhr.setRequestHeader("x-ms-blob-type", "BlockBlob");
            xhr.setRequestHeader("x-ms-date", dateTime);
            
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 201 || xhr.status === 200) {
                    	sql = "insert imagen_x_documento select " + id_imagen.empresa + ",'" + id_imagen.clavecorr + "','" + id_imagen.serie + "'," + id_imagen.nrodoc + ",'" + ret_url + "';";
						PowerStreet.ExecString(sql)
                        document.getElementById('result').innerText = 'Archivo subido con éxito';
                        fileInput.value = "";
                        visualizarImagenes(id_imagen)
                        
                    } else {
                        document.getElementById('result').innerText = 'Error al subir el archivo: ' + xhr.statusText;
                    }
                }
            };
            
            xhr.send(file);
        } else {
            document.getElementById('result').innerText = 'No se seleccionó ningún archivo.';
        }
    }
		
	//------------------------------------------------------------------------------------------------
	
	var id_imagen
	
	function subir_imagen(index){
		var datos = datos_general[index];
		var titulo_imagen = document.getElementById('exampleModalLabel')
		titulo_imagen.innerHTML = "Subir / Descargar Imagen"
		id_imagen = datos
		
		visualizarImagenes(id_imagen)
		
	}
      
	//------------------------------------------------------------------------------------------------
	
	function cargaDatable(tabla) {
		var collapsedGroups = {};
		var top = '';
		var parent = '';
		var groupColumn = 0;
		
		var table = $(tabla).DataTable({
			language: idioma_espanol,
			scrollX: true,
			scrollY: "60vh",
			scrollCollapse: false,
			processing: true,
			lengthMenu: [
				[10, 25, 50, 75, 100, -1], [10, 25, 50, 75, 100, "Todos"]
			],
			dom: "<'top'i><'row'<'col-3'B><'col-9 text-right'fl>><'row'<'col-sm-12'tr>><'row'<'col-sm-12'p>>",
			buttons: [
				'copyHtml5'
			],
			//buttons: [ 'copy', 'excel', 'pdf', 'colvis' ],
			//lengthChange: false,
			//stripeClasses: [],
			//rowGroup: {
			//    dataSrc: [ 4 ],
			//    startRender: function(rows, group, level) {
			//        var all;
			//
			//        if (level === 0) {
			//            top = group;
			//            all = group;
			//        } else if (level === 1) {
			//            parent = top + group; 
			//            all = parent; 
			//            // if parent collapsed, nothing to do
			//            if (!!collapsedGroups[top]) {
			//                return;
			//            }                   
			//        } else {
			//            // if parent collapsed, nothing to do
			//            if (!!collapsedGroups[parent]) {
			//                return;
			//            } 
			//            all = top + parent + group;
			//        }
			//
			//        var collapsed = !!collapsedGroups[all];
			//
			//        rows.nodes().each(function(r) {
			//            r.style.display = collapsed ? 'none' : '';
			//        });
			//
			//        return $('<tr/>')
			//            .append('<td>' + group + ' (' + rows.count() + ')</td>')
			//            .attr('data-name', all)
			//            .toggleClass('collapsed', collapsed);
			//    }
			//},
			order: [
				[1, 'asc']
			] ,
			responsive: true,
			columnDefs: [ 
				{ responsivePriority: 2, targets: -5 },
				{
					targets: [ 0 ],
					visible: false
					}  ] ,
			select: {
				style: 'multi', 
				selector: "td:first-child"
			},
			fnPreDrawCallback:function(){
				$("#details").hide();
				$("#loading").show();
			},
			fnDrawCallback:function(){
				$("#details").show();
				$("#loading").hide();
			},
			fnInitComplete:function(){
				//swal("Datos Cargados", "", "success");
			}   
		});
		
		$('.dataTables_filter input[type="search"]').attr('placeholder','Ingresa datos a buscar....').css({'width':'300px','display':'inline-block'}).addClass('form-control form-control-sm');
		$('.dataTables_filter select').attr('placeholder','Ingresa datos a buscar....').css({'width':'300px','display':'inline-block'}).addClass('form-control form-control-sm');
		
		$(tabla + ' tbody').on('click', 'tr.dtrg-start', function() {
			var name = $(this).data('name');
			collapsedGroups[name] = !collapsedGroups[name];
			table.draw(false);
		});
				
	}
        
	//------------------------------------------------------------------------------------------------
	
	function createDatatable(tabla) {
		if ($.fn.DataTable.isDataTable(tabla)) {
			$(tabla).DataTable().destroy();
		}
		$(tabla + " tbody").empty();
		//Here call the Datatable Bind function;
	} 
	
	//------------------------------------------------------------------------------------------------
	
	function Ocultar_panel() {
		$("#principal").hide();
		$("#consulta_principal").hide();
	}
	
	//------------------------------------------------------------------------------------------------
	
	function CargaDeComboBox(IdCombo, ConsultaSql, valor) {
		var unD;
		unD = PowerStreet.openRecordset(ConsultaSql);

		switch (valor) {
			case 0:
				$(IdCombo).empty();
				for (var i = 1; i <= unD.recordcount; i++) {
					$(IdCombo).append('<option value=' + unD.collect(0) + '>' + unD.collect(0) + " - " + unD.collect(1) + '</option>');
					unD.movenext();
				}
				break;
			case 1:
				$(IdCombo).empty();
				$(IdCombo).append("<option value=0>Todos</option>")
				for (var i = 1; i <= unD.recordcount; i++) {
					$(IdCombo).append('<option value=' + unD.collect(0) + '>' + unD.collect(1) + '</option>');
					unD.movenext();
				}
				break;
			case 2:
				$(IdCombo).empty();
				$(IdCombo).append("<option value=0>Todos</option>")
				for (var i = 1; i <= unD.recordcount; i++) {
					$(IdCombo).append('<option value=' + unD.collect(0) + '>' + unD.collect(0) + " - " + unD.collect(1) + '</option>');
					unD.movenext();
				}
				break;
			case 3:
				$(IdCombo).empty();
				for (var i = 1; i <= unD.recordcount; i++) {
					$(IdCombo).append('<option value=' + unD.collect(0) + '>' + unD.collect(1) + '</option>');
					unD.movenext();
				}
				break;
			case 4:
				$(IdCombo).empty();
				$(IdCombo).append("<option value='0'>Seleccione</option>")
				for (var i = 1; i <= unD.recordcount; i++) {
					$(IdCombo).append('<option value=' + unD.collect(0) + '>' + unD.collect(1) + '</option>');
					unD.movenext();
				}
				break;
		}

		oApp.managePwstErrors();

	}
        
	//------------------------------------------------------------------------------------------------
	
	function encabezado() {
		var oDistrib, oAgencia, oFecha, oVendedor;
		oDistrib = PowerStreet.Distribuidores.Buscar(PowerStreet.Configuracion.Distribuidor);
		oAgencia = oDistrib.BuscarAgencia(PowerStreet.Configuracion.Agencia);
		//oVendedor = PowerStreet.Vendedores.Buscar( @Repartidor );
		if (oDistrib) {
			$("#cabDistrib").append('<b>' + oDistrib.Descripcion + '</b>');
		}
		if (oAgencia) {
			$("#cabAgencia").append('<b>' + oAgencia.Descripcion + '</b>');
		}
		$("#cabFecha").append('<b> ' + Hoy(1) + '</b>');
	}
	
	//------------------------------------------------------------------------------------------------
	
	function Hoy(hora) {
		var partFecha, fcFecha, fcTime;
		fcTime = " ";
		partFecha = new Date();
		var dd = partFecha.getDate();
		var mm = partFecha.getMonth() + 1; //January is 0!
		var yyyy = partFecha.getFullYear();

		if (dd < 10) dd = '0' + dd;
		if (mm < 10) mm = '0' + mm;

		if (hora == 1) {
			var hh = partFecha.getHours();
			var min = partFecha.getMinutes();
			var ss = partFecha.getSeconds();
			if (hh < 10) hh = '0' + hh;
			if (min < 10) min = '0' + min;
			if (ss < 10) ss = '0' + ss;
			fcTime = " " + hh + ':' + min + ':' + ss
		}

		fcFecha = dd + '/' + mm + '/' + yyyy + fcTime;
		return fcFecha;
	}
	
	//------------------------------------------------------------------------------------------------
	
	function soloNumeros(e) {
		key = e.keyCode || e.which;
		tecla = String.fromCharCode(key).toLowerCase();
		letras = "1234567890.";
		especiales = [8, 37, 39, 46];

		tecla_especial = false
		for (var i in especiales) {
			if (key == especiales[i]) {
				tecla_especial = false;
				break;
			}
		}

		if (letras.indexOf(tecla) == -1 && !tecla_especial)
			return false;
	}
	
	//------------------------------------------------------------------------------------------------

	var idioma_espanol = {
		"processing": "Procesando...",
		"lengthMenu": "Mostrar _MENU_ registros",
		"zeroRecords": "No se encontraron resultados",
		"emptyTable": "Ningún dato disponible en esta tabla",
		"infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
		"infoFiltered": "(filtrado de un total de _MAX_ registros)",
		"search": "Buscar:",
		"infoThousands": ",",
		"loadingRecords": "Cargando...",
		"paginate": {
			"first": "Primero",
			"last": "??ltimo",
			"next": "Siguiente",
			"previous": "Anterior"
		},
		"aria": {
			"sortAscending": ": Activar para ordenar la columna de manera ascendente",
			"sortDescending": ": Activar para ordenar la columna de manera descendente"
		},
		"buttons": {
			"copy": "Copiar",
			"colvis": "Visibilidad",
			"collection": "Colección",
			"colvisRestore": "Restaurar visibilidad",
			"copyKeys": "Presione ctrl o u2318 + C para copiar los datos de la tabla al portapapeles del sistema. <br \/> <br \/> Para cancelar, haga clic en este mensaje o presione escape.",
			"copySuccess": {
				"1": "Copiada 1 fila al portapapeles",
				"_": "Copiadas %ds fila al portapapeles"
			},
			"copyTitle": "Copiar al portapapeles",
			"csv": "CSV",
			"excel": "Excel",
			"pageLength": {
				"-1": "Mostrar todas las filas",
				"_": "Mostrar %d filas"
			},
			"pdf": "PDF",
			"print": "Imprimir",
			"renameState": "Cambiar nombre",
			"updateState": "Actualizar",
			"createState": "Crear Estado",
			"removeAllStates": "Remover Estados",
			"removeState": "Remover",
			"savedStates": "Estados Guardados",
			"stateRestore": "Estado %d"
		},
		"autoFill": {
			"cancel": "Cancelar",
			"fill": "Rellene todas las celdas con <i>%d<\/i>",
			"fillHorizontal": "Rellenar celdas horizontalmente",
			"fillVertical": "Rellenar celdas verticalmentemente"
		},
		"decimal": ",",
		"searchBuilder": {
			"add": "Añadir condición",
			"button": {
				"0": "Constructor de búsqueda",
				"_": "Constructor de búsqueda (%d)"
			},
			"clearAll": "Borrar todo",
			"condition": "Condición",
			"conditions": {
				"date": {
					"after": "Despues",
					"before": "Antes",
					"between": "Entre",
					"empty": "Vac??o",
					"equals": "Igual a",
					"notBetween": "No entre",
					"notEmpty": "No Vacio",
					"not": "Diferente de"
				},
				"number": {
					"between": "Entre",
					"empty": "Vacio",
					"equals": "Igual a",
					"gt": "Mayor a",
					"gte": "Mayor o igual a",
					"lt": "Menor que",
					"lte": "Menor o igual que",
					"notBetween": "No entre",
					"notEmpty": "No vacío",
					"not": "Diferente de"
				},
				"string": {
					"contains": "Contiene",
					"empty": "Vacío",
					"endsWith": "Termina en",
					"equals": "Igual a",
					"notEmpty": "No Vacio",
					"startsWith": "Empieza con",
					"not": "Diferente de",
					"notContains": "No Contiene",
					"notStarts": "No empieza con",
					"notEnds": "No termina con"
				},
				"array": {
					"not": "Diferente de",
					"equals": "Igual",
					"empty": "Vacío",
					"contains": "Contiene",
					"notEmpty": "No Vacío",
					"without": "Sin"
				}
			},
			"data": "Data",
			"deleteTitle": "Eliminar regla de filtrado",
			"leftTitle": "Criterios anulados",
			"logicAnd": "Y",
			"logicOr": "O",
			"rightTitle": "Criterios de sangría",
			"title": {
				"0": "Constructor de búsqueda",
				"_": "Constructor de búsqueda (%d)"
			},
			"value": "Valor"
		},
		"searchPanes": {
			"clearMessage": "Borrar todo",
			"collapse": {
				"0": "Paneles de búsqueda",
				"_": "Paneles de búsqueda (%d)"
			},
			"count": "{total}",
			"countFiltered": "{shown} ({total})",
			"emptyPanes": "Sin paneles de búsqueda",
			"loadMessage": "Cargando paneles de b??squeda",
			"title": "Filtros Activos - %d",
			"showMessage": "Mostrar Todo",
			"collapseMessage": "Colapsar Todo"
		},
		"select": {
			"cells": {
				"1": "1 celda seleccionada",
				"_": "%d celdas seleccionadas"
			},
			"columns": {
				"1": "1 columna seleccionada",
				"_": "%d columnas seleccionadas"
			},
			"rows": {
				"1": "1 fila seleccionada",
				"_": "%d filas seleccionadas"
			}
		},
		"thousands": ".",
		"datetime": {
			"previous": "Anterior",
			"next": "Proximo",
			"hours": "Horas",
			"minutes": "Minutos",
			"seconds": "Segundos",
			"unknown": "-",
			"amPm": [
				"AM",
				"PM"
			],
			"months": {
				"0": "Enero",
				"1": "Febrero",
				"10": "Noviembre",
				"11": "Diciembre",
				"2": "Marzo",
				"3": "Abril",
				"4": "Mayo",
				"5": "Junio",
				"6": "Julio",
				"7": "Agosto",
				"8": "Septiembre",
				"9": "Octubre"
			},
			"weekdays": [
				"Dom",
				"Lun",
				"Mar",
				"Mie",
				"Jue",
				"Vie",
				"Sab"
			]
		},
		"editor": {
			"close": "Cerrar",
			"create": {
				"button": "Nuevo",
				"title": "Crear Nuevo Registro",
				"submit": "Crear"
			},
			"edit": {
				"button": "Editar",
				"title": "Editar Registro",
				"submit": "Actualizar"
			},
			"remove": {
				"button": "Eliminar",
				"title": "Eliminar Registro",
				"submit": "Eliminar",
				"confirm": {
					"_": "¿Está seguro que desea eliminar %d filas?",
					"1": "¿Está seguro que desea eliminar 1 fila?"
				}
			},
			"error": {
				"system": "Ha ocurrido un error en el sistema (<a target=\"\\\" rel=\"\\ nofollow\" href=\"\\\">Más información&lt;\\\/a&gt;).<\/a>"
			},
			"multi": {
				"title": "Múltiples Valores",
				"info": "Los elementos seleccionados contienen diferentes valores para este registro. Para editar y establecer todos los elementos de este registro con el mismo valor, hacer click o tap aquí, de lo contrario conservarán sus valores individuales.",
				"restore": "Deshacer Cambios",
				"noMulti": "Este registro puede ser editado individualmente, pero no como parte de un grupo."
			}
		},
		"info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
		"stateRestore": {
			"creationModal": {
				"button": "Crear",
				"name": "Nombre:",
				"order": "Clasificación",
				"paging": "Paginación",
				"search": "Busqueda",
				"select": "Seleccionar",
				"columns": {
					"search": "Búsqueda de Columna",
					"visible": "Visibilidad de Columna"
				},
				"title": "Crear Nuevo Estado",
				"toggleLabel": "Incluir:"
			},
			"emptyError": "El nombre no puede estar vacio",
			"removeConfirm": "¿Seguro que quiere eliminar este %s?",
			"removeError": "Error al eliminar el registro",
			"removeJoiner": "y",
			"removeSubmit": "Eliminar",
			"renameButton": "Cambiar Nombre",
			"renameLabel": "Nuevo nombre para %s",
			"duplicateError": "Ya existe un Estado con este nombre.",
			"emptyStates": "No hay Estados guardados",
			"removeTitle": "Remover Estado",
			"renameTitle": "Cambiar Nombre Estado"
		}
	}
	    
	//------------------------------------------------------------------------------------------------
	
	function formatNumber(num, prefix) {
		num = Math.round(parseFloat(num) * Math.pow(10, 2)) / Math.pow(10, 2);
		prefix = prefix || '';
		num += '';
		var splitStr = num.split('.');
		var splitLeft = splitStr[0];
		var splitRight = splitStr.length > 1 ? '.' + splitStr[1] : '.00';
		splitRight = splitRight + '00';
		splitRight = splitRight.substr(0, 3);
		var regx = /(\d+)(\d{3})/;
		while (regx.test(splitLeft)) {
			splitLeft = splitLeft.replace(regx, '$1' + ',' + '$2');
		}
		return prefix + splitLeft + splitRight;
	}
	
	//------------------------------------------------------------------------------------------------
	
	function ocultarLoader(){
		setTimeout(function(){
			document.getElementById("loader").style.display="none"
		}, 1500);
	}
	
	//------------------------------------------------------------------------------------------------
	
	function mostrarLoader(){
		document.getElementById("loader").style.display="block"
	}
	
	//------------------------------------------------------------------------------------------------
	
	function limpiar(text){
		var text = text.replace(/</g,"&lt;");
		text = text.replace(/>/g,"&gt;");
		text = text.replace(/,/g,",\n");
		return decodeURIComponent(text);
	}
        
	</script>
	

    
</body>
	<pre id="consulta_general" style="display: none;">
		
		if OBJECT_ID('dbo.imagen_x_documento') is null
			create table dbo.imagen_x_documento(
			empresa numeric(5,0) not null
			, clavecorr char(5) not null
			, serie char(5)not null
			, nrodoc numeric(10,0)not null
			, url_doc varchar(max) null
		);
		
		select
			do.empresa
			, rtrim(do.clavecorr) clavecorr
			, rtrim(do.serie) serie
			, do.nrodoc
			, rtrim(convert(char(10),do.fecha,103)) s_fecha
			, rtrim(td.descrip) s_documento
			, rtrim(do.empresa) + '-' + rtrim(do.clavecorr) + '-' + rtrim(do.serie) + '-' + rtrim(do.nrodoc) s_numero
			, rtrim(isnull(att.valorAtributo,'-')) s_numero_interno
			, rtrim(td.venta) s_venta
		from documentos do
			join vendedor ve on do.vendedor = ve.codigo
			join tipodoc td on td.codigo = do.tipodocum
			join adjuntar_archivos_tipodoc atd on atd.Param = do.tipodocum  
			left join atributosxdocumento att on att.empresa=do.empresa and att.clavecorr=do.clavecorr and att.serie=do.serie and att.nrodoc=do.nrodoc and att.idAtributo='Nrodoc'
		where 
			do.fecha between objdesde and objhasta
			and ve.distribuidor = @Disitribuidor 
			and ve.agencia = @Agencia
			and do.anulado = 0
			and atd.Valor1 = 'true'
		order by
			do.empresa
			, do.clavecorr
			, do.serie
			, do.nrodoc
        
    </pre>
    
    <pre id="consulta_items" style="display: none;">
		select
			*
		from imagen_x_documento
		where
			empresa = objempresa and clavecorr='objclavecorr' and serie = 'objserie' and nrodoc = objnrodoc
	</pre>
	
</html>
